{
	"Description" : "AWS CloudFormation template that bootstraps an EC2 instance with Ansible + Dynamic Inventory capability",
	"Parameters" : {
		"InstanceType" : {
	    	"Description" : "\nThe desired EC2 instance type",
	    	"Type" : "String",
	    	"Default" : "t2.micro"
    	},
    	"AmiId" : {
    		"Description" : "\nThe ID of the AMI in the desired AWS region",
    		"Type" : "String",
    		"Default" : "ami-18f8df7d"
    	},
    	"KeyName" : {
	    	"Description" : "\nThe name of an existing key pair in the current region that will be used to SSH into EC2 instances",
	    	"Type" : "AWS::EC2::KeyPair::KeyName",
	    	"ConstraintDescription" : "must be the name of an existing EC2 KeyPair"
	    },
	    "SecurityGroupId" : {
	    	"Description" : "The ID of an existing security group in the desired region",
	    	"Type" : "AWS::EC2::SecurityGroup::Id",
	    	"ConstraintDescription" : "must be the ID of an existing security group in the format sg-xxxxxxxx"
	    },
	    "Ec2ExternalInventoryScriptUrl" : {
	    	"Description" : "URL of EC2 external inventory Python script",
	    	"Type" : "String",
	    	"Default" : "https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/ec2.py"
	    },
        "AnsibleNodeInstanceProfileName" : {
            "Description" : "Name of pre-existing instance profile for Ansible node",
            "Type" : "String"
        },
        "AnsibleNodeIamRoleArn" : {
        	"Description" : "ARN of IAM role to be assigned to Ansible node",
        	"Type" : "String"
        }
	},
	"Resources" : {
		"AnsibleNode" : {
			"Type" : "AWS::EC2::Instance",
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
					"config" : {
						"files" : {
							"/etc/ansible/ec2.ini" : {
								"content" : { 
									"Fn::Join" : [
										"", 
										[
					                		"[ec2]\n",
					                		"regions = ",
					                		{
					                			"Ref" : "AWS::Region"
					                		},
					                		"\n",
					                		"destination_variable = private_dns_name\n",
					                		"vpc_destination_variable = private_ip_address\n",
					                		"route53 = False\n",
					                		"rds = False\n",
					                		"elasticache = False\n",
					                		"all_instances = False\n",
					                		"all_rds_instances = False\n",
					                		"include_rds_clusters = False\n",
					                		"all_elasticache_replication_groups = False\n",
					                		"all_elasticache_clusters = False\n",
					                		"all_elasticache_nodes = False\n",
					                		"cache_path = ~/.ansible/tmp\n",
					                		"cache_max_age = 0\n",
					                		"nested_groups = False\n",
					                		"replace_dash_in_groups = True\n",
					                		"expand_csv_tags = False\n",
					                		"group_by_instance_id = True\n",
					                		"group_by_region = False\n",
					                		"group_by_availability_zone = True\n",
					                		"group_by_aws_account = False\n",
					                		"group_by_ami_id = True\n",
					                		"group_by_instance_type = True\n",
					                		"group_by_instance_state = False\n",
					                		"group_by_key_pair = True\n",
					                		"group_by_vpc_id = True\n",
					                		"group_by_security_group = True\n",
					                		"group_by_tag_keys = True\n",
					                		"group_by_tag_none = True\n",
					                		"group_by_route53_names = False\n",
					                		"group_by_rds_engine = False\n",
					                		"group_by_rds_parameter_group = False\n",
					                		"group_by_elasticache_engine = False\n",
					                		"group_by_elasticache_cluster = False\n",
					                		"group_by_elasticache_parameter_group = False\n",
					                		"group_by_elasticache_replication_group = False\n",
					                		"stack_filters = False\n",
					                		"iam_role = ",
					                		{
					                			"Ref" : "AnsibleNodeIamRoleArn"
					                		},
					                		"\n"
					                	]
				                	]
				                },
								"mode" : "000644",
								"owner" : "root",
								"group" : "root"
							}
						}
					}
				}
			},
			"Properties" : {
				"ImageId" : {
					"Ref" : "AmiId"
				},
				"InstanceType" : {
					"Ref" : "InstanceType"
				},
				"KeyName" : {
					"Ref" : "KeyName"
				},
				"SecurityGroupIds" : [
					{
						"Ref" : "SecurityGroupId"
					}
				],
				"Tags" : [
					{
						"Key" : "Name",
						"Value" : "Ansible Node"
					}
				],
	    		"IamInstanceProfile" : {
	    			"Ref" : "AnsibleNodeInstanceProfileName"
	    		},
				"UserData" : {
					"Fn::Base64" : {
						"Fn::Join" : [
							"", 
							[
		        				"#!/bin/bash -xe\n",
		        				"yum install epel-release -y\n",
		        				"yum update -y\n",
		        				"yum install git python python-devel python-pip openssl ansible wget -y\n",
		        				"wget -O /etc/ansible/ec2.py ",
		        				{
		        					"Ref" : "Ec2ExternalInventoryScriptUrl"
		        				},
		        				"\n",
		        				"chmod +x /etc/ansible/ec2.py\n",
		        				"sed -i '14s/.*/inventory = \\/etc\\/ansible\\/ec2.py/' /etc/ansible/ansible.cfg\n",
		        				"rm -f /etc/ansible/hosts\n",
		        				"sed -i '21s/.*/sudo_user = root/' /etc/ansible/ansible.cfg"
		        			]
		        		]
		        	}
		        }
			}
		}
	},
	"Outputs" : {
		"Ec2InstanceId" : {
			"Description" : "EC2 instanceId of Ansible node",
			"Value" : {
				"Ref" : "AnsibleNode"
			}
		}
	}
}