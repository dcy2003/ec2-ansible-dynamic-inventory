{
	"Description" : "AWS CloudFormation template that bootstraps an EC2 instance with Ansible + Dynamic Inventory capability",
	"Parameters" : {
		"InstanceType" : {
	    	"Description" : "\nThe desired EC2 instance type",
	    	"Type" : "String",
	    	"Default" : "t2.micro"
    	},
    	"AmiId" : {
    		"Description" : "\nThe ID of the AMI in the desired AWS region",
    		"Type" : "String",
    		"Default" : "ami-18f8df7d"
    	},
    	"KeyName" : {
	    	"Description" : "\nThe name of an existing key pair in the current region that will be used to SSH into EC2 instances",
	    	"Type" : "AWS::EC2::KeyPair::KeyName",
	    	"ConstraintDescription" : "must be the name of an existing EC2 KeyPair"
	    },
	    "SecurityGroupId" : {
	    	"Description" : "The ID of an existing security group in the desired region",
	    	"Type" : "AWS::EC2::SecurityGroup::Id",
	    	"ConstraintDescription" : "must be the ID of an existing security group in the format sg-xxxxxxxx"
	    },
	    "Ec2ExternalInventoryScriptUrl" : {
	    	"Description" : "URL of EC2 external inventory Python script",
	    	"Type" : "String",
	    	"Default" : "https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/ec2.py"
	    },
	    "Ec2ExternalInventoryConfigUrl" : {
	    	"Description" : "URL of EC2 external inventory config file",
	    	"Type" : "String",
	    	"Default" : "https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/ec2.ini"
	    },
        "AnsibleNodeInstanceProfileName" : {
            "Description" : "Name of pre-existing instance profile for Ansible node",
            "Type" : "String"
        },
        "AnsibleNodeIamRoleArn" : {
        	"Description" : "ARN of IAM role to be assigned to Ansible node",
        	"Type" : "String"
        }
	},
	"Resources" : {
		"AnsibleNode" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"ImageId" : {
					"Ref" : "AmiId"
				},
				"InstanceType" : {
					"Ref" : "InstanceType"
				},
				"KeyName" : {
					"Ref" : "KeyName"
				},
				"SecurityGroupIds" : [
					{
						"Ref" : "SecurityGroupId"
					}
				],
				"Tags" : [
					{
						"Key" : "Name",
						"Value" : "Ansible Node"
					}
				],
	    		"IamInstanceProfile" : {
	    			"Ref" : "AnsibleNodeInstanceProfileName"
	    		},
				"UserData" : {
					"Fn::Base64" : {
						"Fn::Join" : [
							"", 
							[
		        				"#!/bin/bash -xe\n",
		        				"yum install epel-release -y\n",
		        				"yum update -y\n",
		        				"yum install git python python-devel python-pip openssl ansible wget -y\n",
		        				"wget -O /etc/ansible/ec2.py ",
		        				{
		        					"Ref" : "Ec2ExternalInventoryScriptUrl"
		        				},
		        				"\n",
		        				"wget -O /etc/ansible/ec2.ini ",
		        				{
		        					"Ref" : "Ec2ExternalInventoryConfigUrl"
		        				},
		        				"\n",
		        				"chmod +x /etc/ansible/ec2.py\n",
		        				"chmod 644 /etc/ansible/ec2.ini\n",
		        				"sed -i '16s/.*/regions = ",
		        				{
		        					"Ref" : "AWS::Region"
		        				},
		        				"/' /etc/ansible/ec2.ini\n",
		        				"sed -i '17s/.*/#regions_exclude = us-gov-west-1, cn-north-1/' /etc/ansible/ec2.ini\n",
		        				"sed -i '32s/.*/destination_variable = private_dns_name/' /etc/ansible/ec2.ini\n",
		        				"sed -i '48s/.*/vpc_destination_variable = private_ip_address/' /etc/ansible/ec2.ini\n",
		        				"sed -i '70s/.*/rds = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '73s/.*/elasticache = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '117s/.*/cache_max_age = 0/' /etc/ansible/ec2.ini\n",
		        				"sed -i '143s/.*/group_by_route53_names = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '144s/.*/group_by_rds_engine = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '145s/.*/group_by_rds_parameter_group = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '146s/.*/group_by_elasticache_engine = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '147s/.*/group_by_elasticache_cluster = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '148s/.*/group_by_elasticache_parameter_group = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '149s/.*/group_by_elasticache_replication_group = False/' /etc/ansible/ec2.ini\n",
		        				"sed -i '186s/.*/iam_role = ",
		        				{
		        					"Ref" : "AnsibleNodeIamRoleArn"
		        				},
		        				"/' /etc/ansible/ec2.ini\n",
		        				"sed -i '14s/.*/inventory = \\/etc\\/ansible\\/ec2.py/' /etc/ansible/ansible.cfg\n",
		        				"sed -i '21s/.*/sudo_user = root/' /etc/ansible/ansible.cfg\n",
		        				"rm -f /etc/ansible/hosts\n"
		        			]
		        		]
		        	}
		        }
			}
		}
	},
	"Outputs" : {
		"Ec2InstanceId" : {
			"Description" : "EC2 instanceId of Ansible node",
			"Value" : {
				"Ref" : "AnsibleNode"
			}
		}
	}
}